desviacion_estandar_nivel1 <- sd(Datos$nivel_1)
desviacion_estandar_nivel1
# ++++++++++++++++++++++++++++++ #
#----7. Análisis descriptivos----
# ++++++++++++++++++++++++++++++ #
#---- 7.1. Medidas de tendencia central ----
media_nivel2 <- mean(Datos$nivel_2) # Promedio prestadores nivel 2
mediana_nivel2 <- median(Datos$nivel_2) # Mediana prestadores nivel 2
moda_nivel1 <- names(sort(table(Datos$nivel_1), decreasing = TRUE)[1]) # Moda prestadores nivel 1
#---- 7.1. Medidas de dispersión ----
desviacion_estandar_nivel1 <- sd(Datos$nivel_1) # Desviación estándar prestadores nivel 1
range_wt <- range(Datos$nivel_1) # Rango intercuartílico prestadores nivel 1
media_nivel2 <- mean(Datos$nivel_2) # Promedio prestadores nivel 2
media_nivel2
mediana_nivel2 <- median(Datos$nivel_2) # Mediana prestadores nivel 2
mediana_nivel2
moda_nivel1 <- names(sort(table(Datos$nivel_1), decreasing = TRUE)[1]) # Moda prestadores nivel 1
moda_nivel1
desviacion_estandar_nivel1 <- sd(Datos$nivel_1) # Desviación estándar prestadores nivel 1
desviacion_estandar_nivel1
range_intercuartilico_nivel1 <- range(Datos$nivel_1) # Rango intercuartílico prestadores nivel 1
range_wt
desviacion_estandar_nivel1 <- sd(Datos$nivel_1) # Desviación estándar prestadores nivel 1
desviacion_estandar_nivel1
range_intercuartilico_nivel1 <- range(Datos$nivel_1) # Rango intercuartílico prestadores nivel 1
range_wt
# ++++++++++++++++++++++++++++++ #
#----7. Análisis descriptivos----
# ++++++++++++++++++++++++++++++ #
#---- 7.1. Medidas de tendencia central ----
media_nivel2 <- mean(Datos$nivel_2) # Promedio prestadores nivel 2
media_nivel2
mediana_nivel2 <- median(Datos$nivel_2) # Mediana prestadores nivel 2
mediana_nivel2
moda_nivel1 <- names(sort(table(Datos$nivel_1), decreasing = TRUE)[1]) # Moda prestadores nivel 1
moda_nivel1
#---- 7.1. Medidas de dispersión ----
desviacion_estandar_nivel1 <- sd(Datos$nivel_1) # Desviación estándar prestadores nivel 1
desviacion_estandar_nivel1
range_intercuartilico_nivel1 <- range(Datos$nivel_1) # Rango intercuartílico prestadores nivel 1
range_wt
# ++++++++++++++++++++++++++++++ #
#----7. Análisis descriptivos----
# ++++++++++++++++++++++++++++++ #
#---- 7.1. Medidas de tendencia central ----
media_nivel2 <- mean(Datos$nivel_2) # Promedio prestadores nivel 2
media_nivel2
mediana_nivel2 <- median(Datos$nivel_2) # Mediana prestadores nivel 2
mediana_nivel2
moda_nivel1 <- names(sort(table(Datos$nivel_1), decreasing = TRUE)[1]) # Moda prestadores nivel 1
moda_nivel1
#---- 7.1. Medidas de dispersión ----
desviacion_estandar_nivel1 <- sd(Datos$nivel_1) # Desviación estándar prestadores nivel 1
desviacion_estandar_nivel1
range_intercuartilico_nivel1 <- range(Datos$nivel_1) # Rango intercuartílico prestadores nivel 1
range_wt
range_intercuartilico_nivel1 <- range(Datos$nivel_1) # Rango intercuartílico prestadores nivel 1
range_intercuartilico_nivel1
ggplot(mtcars, aes(x = mpg)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de MPG", x = "MPG", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
View(Datos)
ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de MPG", x = "MPG", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
ggplot(Datos, aes(x = nivel_2)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de MPG", x = "MPG", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
View(divipola_ajustado)
View(Dependientes)
View(Datos)
names(Datos)
ggplot(Datos, aes(x = Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de MPG", x = "MPG", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
ggplot(Datos, aes(x = P.blica)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de MPG", x = "MPG", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
ggplot(Datos, aes(x = Profesional_Independiente)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de MPG", x = "MPG", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
ggplot(Datos, aes(x = JURIDICO)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de MPG", x = "MPG", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de MPG", x = "MPG", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de prestadores de nivel 1", x = "prestadores de nivel 1", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
sum(Datos$nivel_1)
Testing <- Datos %>%
group_by(nivel_1) %>%
summarise(Total = sum(nivel_1))
View(Testing)
hist(Datos$nivel_1, main = "Histograma de MPG", xlab = "MPG")
boxplot(Datos$nivel_1, main = "Boxplot de MPG")
Testing <- Datos %>%
group_by(nivel_1) %>%
summarise(Total = count(nivel_1))
Testing <- Datos %>%
group_by(nivel_1) %>%
mutate(nivel_1 = as.character(nivel_1)) %>%
summarise(Total = count(nivel_1))
Testing <- Datos %>%
mutate(nivel_1 = as.character(nivel_1)) %>%
group_by(nivel_1) %>%
summarise(Total = count(nivel_1))
Testing <- Datos %>%
mutate(nivel_1 = as.character(nivel_1))
Testing <- Datos %>%
mutate(nivel_1 = as.character(nivel_1)) %>%
group_by(nivel_1) %>%
summarise(Total = n())
View(Testing)
boxplot(Datos$nivel_1, main = "Boxplot de Prestadores de nivel 1")
hist(Datos$nivel_1, main = "Histograma de MPG", xlab = "MPG")
# ---- Histograma ----
ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de prestadores de nivel 1", x = "prestadores de nivel 1", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
table(Datos$nivel_1)
View(Prestadores)
ggplot(Prestadores, aes(x = nivel)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de prestadores de nivel 1", x = "prestadores de nivel 1", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(binwidth = 2, fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de prestadores de nivel 1", x = "prestadores de nivel 1", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(fill = "skyblue", color = "black") +   # Agregar el histograma
labs(title = "Histograma de prestadores de nivel 1", x = "prestadores de nivel 1", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(fill = "skyblue", color = "black") +   # Agregar el histograma
geom_text(aes(label=nivel_1)) +
labs(title = "Histograma de prestadores de nivel 1", x = "prestadores de nivel 1", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(fill = "skyblue", color = "black") +   # Agregar el histograma
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +   # Agregar etiquetas
labs(title = "Histograma de prestadores de nivel 1", x = "prestadores de nivel 1", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal()
ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(fill = "skyblue", color = "black") +   # Agregar el histograma
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +   # Agregar etiquetas
labs(title = "Histograma de prestadores de nivel 1", x = "prestadores de nivel 1", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal() +
scale_x_continuous()
ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(fill = "skyblue", color = "black") +   # Agregar el histograma
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +   # Agregar etiquetas
labs(title = "Histograma de prestadores de nivel 1", x = "prestadores de nivel 1", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal() +
scale_x_continuous(breaks = seq(min(Datos$nivel_1), max(Datos$nivel_1), by = 1))   # Etiquetas en el eje x
Histograma <- ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(fill = "skyblue", color = "black") +   # Agregar el histograma
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +   # Agregar etiquetas
labs(title = "Histograma de prestadores de nivel 1 a nivel nacional", x = "prestadores de nivel 1", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal() +
scale_x_continuous(breaks = seq(min(Datos$nivel_1), max(Datos$nivel_1), by = 1))   # Etiquetas en el eje x
ggsave(Histograma, "Histograma de prestadores de nivel 1 a nivel nacional.bmp", width = 13.66, height = 7.68, dpi = 150)
ggsave(Histograma, "Histograma_de_prestadores_de_nivel_1_a_nivel_nacional.bmp", width = 13.66, height = 7.68, dpi = 150)
Histograma <- ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(fill = "skyblue", color = "black") +   # Agregar el histograma
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +   # Agregar etiquetas
labs(title = "Histograma de prestadores de nivel 1 a nivel nacional", x = "prestadores de nivel 1", y = "Frecuencia") +   # Etiquetas de los ejes y título
theme_minimal() +
scale_x_continuous(breaks = seq(min(Datos$nivel_1), max(Datos$nivel_1), by = 1))   # Etiquetas en el eje x
ggsave(Histograma, file="Histograma_de_prestadores_de_nivel_1_a_nivel_nacional.bmp", width = 13.66, height = 7.68, dpi = 150)
tabla_frecuencias <- table(Datos$nivel_1)
tabla_frecuencias
plot01 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Pronostico = mean(Pronostico),
Nacimientos_2022 = mean(Nacimientos_2022))
View(plot01)
plot01 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Pronostico = mean(Pronostico),
Nacimientos_2022 = mean(Nacimientos_2022)) %>%
ggplot(aes(x = depa_nombre)) +
geom_point(aes(y = Pronostico, colour = "Prónostico")) +
geom_point(aes(y = Nacimientos_2022, colour = "Nacimientos 2022")) +
coord_flip() +
ylab("Valor")
plot01
plot01
plot01 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Pronostico = mean(Pronostico),
Nacimientos_2022 = mean(Nacimientos_2022)) %>%
ggplot(aes(x = depa_nombre)) +
geom_point(aes(y = Pronostico, colour = "Prónostico")) +
geom_point(aes(y = Nacimientos_2022, colour = "Nacimientos 2022")) +
coord_flip() +
labs(title = "Comparación entre los datos observados y pronosticados del modelo para nacimientos en el año 2022", x = "Departamento", y = "Valor") +   # Etiquetas de los ejes y título
plot01
plot01 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Pronostico = mean(Pronostico),
Nacimientos_2022 = mean(Nacimientos_2022)) %>%
ggplot(aes(x = depa_nombre)) +
geom_point(aes(y = Pronostico, colour = "Prónostico")) +
geom_point(aes(y = Nacimientos_2022, colour = "Nacimientos 2022")) +
coord_flip() +
labs(title = "Comparación entre los datos observados y pronosticados del modelo para nacimientos en el año 2022", x = "Departamento", y = "Valor")    # Etiquetas de los ejes y título
plot01
plot01 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Pronostico = mean(Pronostico),
Nacimientos_2022 = mean(Nacimientos_2022)) %>%
ggplot(aes(x = reorder(depa_nombre))) +
geom_point(aes(y = Pronostico, colour = "Prónostico")) +
geom_point(aes(y = Nacimientos_2022, colour = "Nacimientos 2022")) +
coord_flip() +
labs(title = "Comparación entre los datos observados y pronosticados del modelo para nacimientos en el año 2022", x = "Departamento", y = "Valor")    # Etiquetas de los ejes y título
plot01
plot01 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Pronostico = mean(Pronostico),
Nacimientos_2022 = mean(Nacimientos_2022)) %>%
ggplot(aes(x = depa_nombre)) +
geom_point(aes(y = Pronostico, colour = "Prónostico")) +
geom_point(aes(y = Nacimientos_2022, colour = "Nacimientos 2022")) +
coord_flip() +
labs(title = "Comparación entre los datos observados y pronosticados del modelo para nacimientos en el año 2022", x = "Departamento", y = "Valor")    # Etiquetas de los ejes y título
plot01
plot01 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Pronostico = mean(Pronostico),
Nacimientos_2022 = mean(Nacimientos_2022)) %>%
ggplot(aes(x = reorder(depa_nombre, Pronostico, Nacimientos_2022))) +
geom_point(aes(y = Pronostico, colour = "Prónostico")) +
geom_point(aes(y = Nacimientos_2022, colour = "Nacimientos 2022")) +
coord_flip() +
labs(title = "Comparación entre los datos observados y pronosticados del modelo para nacimientos en el año 2022", x = "Departamento", y = "Valor")    # Etiquetas de los ejes y título
plot01
plot01 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Pronostico = mean(Pronostico),
Nacimientos_2022 = mean(Nacimientos_2022)) %>%
ggplot(aes(x = reorder(depa_nombre, Nacimientos_2022))) +
geom_point(aes(y = Pronostico, colour = "Prónostico")) +
geom_point(aes(y = Nacimientos_2022, colour = "Nacimientos 2022")) +
coord_flip() +
labs(title = "Comparación entre los datos observados y pronosticados del modelo para nacimientos en el año 2022", x = "Departamento", y = "Valor")    # Etiquetas de los ejes y título
plot01
ggsave(plot01, file="ComparacionDatosObservadosVSModeloNacimientos2022.bmp", width = 13.66, height = 7.68, dpi = 150)
ggsave(Grafico, file="CumplimientoLinealidad.bmp", width = 13.66, height = 7.68, dpi = 150)
Grafico
plot(m_09$fitted.values, resid(m_09))
abline(h = 0, col = "red")
bmp(file="ValoresAjustadosResiduosModeloNacimientos2022.bmp",width=1366, height=768, res=100)
plot(m_09$fitted.values, resid(m_09))
abline(h = 0, col = "red")
dev.off()
mean(m_09$residuals) # Si la media de los residuos es cero hay linealidad.
linearHypothesis(m_09, c("nivel_2=0", "Poblacion=0"))
bmp(file="NormalidadResiduosModeloNacimientos2022.bmp",width=1366, height=768, res=100)
qqnorm(m_09$residuals)
qqline(m_09$residuals)
dev.off()
qqnorm(m_09$residuals)
qqline(m_09$residuals)
#----7.2.1.7.1.3. Homocedasticidad: Variabilidad de los residuos ----
bmp(file="HomocedasticidadResiduosModeloNacimientos2022.bmp",width=1366, height=768, res=100)
plot(m_09$residuals ~ m_09$fitted)
plot(abs(m_09$residuals) ~ m_09$fitted)
dev.off()
# Hay variabilidad de los residuos
bmp(file="IndependenciaResiduosModeloNacimientos2022.bmp",width=1366, height=768, res=100)
plot(m_09$residuals)
dev.off()
Dependientes <- Datos %>%
select(nivel_2, Poblacion)
cor(Dependientes)
car::vif(m_09) # Se aplica test de Factor de Inflaciòn de la Varianza.
# Puesto que el VIF para cada una de las variables independientes es menor a 5, se puede afirmar
# que no hay multicolinealidad.
summary(m_09_01)
m_09_01
library(esquisse)
esquisser()
esquisser()
esquisser()
Plot_01 <- Datos %>% ggplot(aes(x = Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS,
y = Poblacion)) +
geom_point(shape = "circle filled", size = 1.5, colour = "#EF562D") +
labs(x = "Instituciones Prestadoras de Salud", y = "Población",
title = "Relación entre Población y Número de Instituciones Prestadoras de Salud",
caption = "Creado por Inés Enai Escobar Navas") +
theme_gray()
Plot_01
Plot_02 <- Datos %>%
ggplot(aes(x = Poblacion, y = Profesional_Independiente)) +
geom_point()
Plot_02
Plot_02 <- Datos %>%
ggplot(aes(x = Poblacion, y = Profesional_Independiente)) +
geom_point()
Plot_02
esquisser()
esquisser()
Plot_01 <- Datos %>%
ggplot(aes(x = Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS,
y = Poblacion)) +
geom_point(shape = "circle filled", size = 1.5, colour = "#EF562D") +
labs(x = "Instituciones Prestadoras de Salud", y = "Población",
title = "Relación entre Población y Número de Instituciones Prestadoras de Salud",
caption = "Creado por Inés Enai Escobar Navas") +
theme_gray()
Plot_01
ggsave(Plot_01, file="RelacionentrePoblacionyNumeroInstitucionesPrestadorasdeSalud.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_02 <- Datos %>%
ggplot(aes(x = Profesional_Independiente, y = Poblacion)) +
geom_point(shape = "circle open", size = 1.5, colour = "#228B22") +
labs(x = "Profesional independiente", y = "Población",
title = "Relación entre Población y Profesionales Independentes",
caption = "Creado por Inés Enai Escobar Navas") +
theme_gray()
Plot_02
ggsave(Plot_02, file="RelacionentrePoblacionyProfesionalesIndependentes.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_04 <- Datos %>%
ggplot(aes(x = depa_nombre, y = Profesional_Independiente)) +
geom_point(shape = "circle open", size = 1.5, colour = "#A850BD") +
labs(x = "Departamento", y = "Número de profesionales independientes",
title = "Distribución de profesionales independientes por departamento",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_minimal()
Plot_04
ggsave(Plot_04, file="DistribuciondeProfesionalesIndependientesporDepartamento.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_05 <- Datos %>%
ggplot(aes(x = Poblacion, y = nivel_1)) +
geom_point(shape = "circle open", size = 1.5, colour = "#A43939") +
labs(x = "Población", y = "Prestadores nivel 1",
title = "Relación entre población y prestadores de nivel 1",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_gray()
Plot_05
ggsave(Plot_05, file="RelacionentrePoblacionyPrestadoresdeNivel_1.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_06 <- Datos %>%
ggplot(aes(x = Poblacion, y = nivel_2)) +
geom_point(shape = "circle open", size = 1.5, colour = "#9349A4") +
labs(x = "Población", y = "Prestadores nivel 2",
title = "Relación entre población y prestadores de nivel 2",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_minimal()
Plot_06
ggsave(Plot_06, file="RelacionentrePoblacionyPrestadoresdeNivel_2.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_07 <- Datos %>%
ggplot(aes(x = Poblacion, y = nivel_3)) +
geom_point(shape = "circle open", size = 1.5, colour = "#228B22") +
labs(x = "Población", y = "Prestadores nivel 3", title = "Relación entre población y prestadores de nivel 3",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_linedraw()
Plot_07
ggsave(Plot_07, file="RelacionentrePoblacionyPrestadoresdeNivel_3.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_08 <- Datos %>%
ggplot(aes(x = Superficie, y = nivel_1)) +
geom_point(shape = "circle open", size = 1.5, colour = "#EF562D") +
labs(x = "Superficie", y = "Prestadores nivel 1",
title = "Relación entre superficie y prestadores de nivel 1",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_linedraw()
Plot_08
ggsave(Plot_08, file="RelacionentreSuperficieyPrestadoresdeNivel_1.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_09 <- Datos %>%
ggplot(aes(x = Superficie, y = nivel_2)) +
geom_point(shape = "circle open", size = 1.5, colour = "#FF69B4") +
labs(x = "Superficie", y = "Prestadores nivel 2",
title = "Relación entre superficie y prestadores de nivel 2",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_linedraw()
Plot_09
Plot_03 <- Datos %>%
ggplot(aes(x = reorder(depa_nombre, Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS))) +
geom_col(aes(y = Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS),fill = "#91BFE5") +
labs(x = "Departamento",y = "Número de instituciones prestadoras de salud",
title = "Distribución de instituciones prestadoras de salud por departamento",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_minimal()
Plot_03
Plot_03 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS = mean(Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS)) %>%
ggplot(aes(x = reorder(depa_nombre, Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS))) +
geom_col(aes(y = Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS),fill = "#91BFE5") +
labs(x = "Departamento",y = "Número de instituciones prestadoras de salud",
title = "Distribución de instituciones prestadoras de salud por departamento",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_minimal()
Plot_03
Plot_02 <- Datos %>%
ggplot(aes(x = Profesional_Independiente, y = Poblacion)) +
geom_point(shape = "circle open", size = 1.5, colour = "#228B22") +
labs(x = "Profesional independiente", y = "Población",
title = "Relación entre Población y Profesionales Independentes",
caption = "Creado por Inés Enai Escobar Navas") +
theme_gray()
Plot_02
ggsave(Plot_02, file="RelacionentrePoblacionyProfesionalesIndependentes.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_03 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS = mean(Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS)) %>%
ggplot(aes(x = reorder(depa_nombre, Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS))) +
geom_col(aes(y = Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS),fill = "#91BFE5") +
labs(x = "Departamento",y = "Número de instituciones prestadoras de salud",
title = "Distribución promedio de instituciones prestadoras de salud por departamento",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_minimal()
Plot_03
ggsave(Plot_03, file="DistribucionPromediodeInstitucionesPrestadorasdeSaludporDepartamento.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_03 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS = mean(Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS)) %>%
ggplot(aes(x = reorder(depa_nombre, Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS))) +
geom_col(aes(y = Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS),fill = "#91BFE5") +
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +   # Agregar etiquetas
labs(x = "Departamento",y = "Número de instituciones prestadoras de salud",
title = "Distribución promedio de instituciones prestadoras de salud por departamento",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_minimal()
Plot_03
Plot_03 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS = mean(Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS)) %>%
ggplot(aes(x = reorder(depa_nombre, Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS))) +
geom_col(aes(y = Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS),fill = "#91BFE5") +
geom_text(stat = "count", aes(label = ..count..)) +   # Agregar etiquetas
labs(x = "Departamento",y = "Número de instituciones prestadoras de salud",
title = "Distribución promedio de instituciones prestadoras de salud por departamento",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_minimal()
Plot_03
Plot_03 <- Datos %>%
group_by(depa_nombre) %>%
summarise(Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS = mean(Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS)) %>%
ggplot(aes(x = reorder(depa_nombre, Instituciones_Prestadoras_de_Servicios_de_Salud_._IPS))) +
geom_text(stat = "count", aes(label = ..count..)) +   # Agregar etiquetas
labs(x = "Departamento",y = "Número de instituciones prestadoras de salud",
title = "Distribución promedio de instituciones prestadoras de salud por departamento",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_minimal()
Plot_03
ggsave(Plot_03, file="DistribucionPromediodeInstitucionesPrestadorasdeSaludporDepartamento.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_04 <- Datos %>%
ggplot(aes(x = depa_nombre, y = Profesional_Independiente)) +
geom_point(shape = "circle open", size = 1.5, colour = "#A850BD") +
labs(x = "Departamento", y = "Número de profesionales independientes",
title = "Distribución de profesionales independientes por departamento",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_minimal()
Plot_04
ggsave(Plot_04, file="DistribuciondeProfesionalesIndependientesporDepartamento.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_09 <- Datos %>%
ggplot(aes(x = Superficie, y = nivel_2)) +
geom_point(shape = "circle open", size = 1.5, colour = "#FF69B4") +
labs(x = "Superficie", y = "Prestadores nivel 2",
title = "Relación entre superficie y prestadores de nivel 2",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_linedraw()
Plot_09
ggsave(Plot_09, file="RelacionentreSuperficieyPrestadoresdeNivel_2.bmp", width = 13.66, height = 7.68, dpi = 150)
Plot_10 <- Datos %>%
ggplot(aes(x = Superficie, y = nivel_3)) +
geom_point(shape = "circle open", size = 1.5, colour = "#46337E") +
labs(x = "Superficie", y = "Prestadores nivel 3", title = "Relación entre superficie y prestadores de nivel 3",
caption = "Creado por Inés Enai Escobar Navas") +
coord_flip() +
theme_linedraw()
Plot_10
ggsave(Plot_10, file="RelacionentreSuperficieyPrestadoresdeNivel_3.bmp", width = 13.66, height = 7.68, dpi = 150)
Histograma <- ggplot(Datos, aes(x = nivel_1)) +   # Definir el conjunto de datos y la variable
geom_histogram(fill = "skyblue", color = "black") +   # Agregar el histograma
geom_text(stat = "count", aes(label = ..count..), vjust = -0.5) +   # Agregar etiquetas
labs(title = "Histograma de prestadores de nivel 1 a nivel nacional", x = "prestadores de nivel 1",
y = "Frecuencia", caption = "Creado por Inés Enai Escobar Navas") +   # Etiquetas de los ejes y título
theme_minimal() +
scale_x_continuous(breaks = seq(min(Datos$nivel_1), max(Datos$nivel_1), by = 1))   # Etiquetas en el eje x
ggsave(Histograma, file="Histograma_de_prestadores_de_nivel_1_a_nivel_nacional.bmp", width = 13.66, height = 7.68, dpi = 150)
Histograma
getwd()
setwd("C:/Users/el_ki/OneDrive/Documentos/Prueba tecnica ADRES Ines Escobar/Prueba técnica Analista de datos - ADRES")
setwd("C:/Users/el_ki/OneDrive/Documentos/Prueba tecnica ADRES Ines Escobar")
setwd("C:/Users/el_ki/OneDrive/Documentos/PRUEBA_TECNICA_ADRES_INES_ESCOBAR")
